<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled" />

	<http use-expressions="true" auto-config="true">
		<intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
		<!-- <intercept-url pattern="/account**" access="hasRole('ROLE_USER')" /> -->
		<form-login login-page="/login.html"  authentication-failure-handler-ref="userNameCachingAuthenticationFailureHandler" 
		 authentication-failure-url="/login.html?error"/>
		<!--  authentication-failure-url="/login.html?error"/>-->
		<logout logout-url="/logout" />
		 
  
	</http>
	<beans:bean
    id="userNameCachingAuthenticationFailureHandler"
    class="com.binhhv.utils.UserNameCachingAuthenticationFailureHandler">
    <beans:property name="defaultFailureUrl" value="/login.html?error"/>
</beans:bean>
	<authentication-manager alias="authenticationManager">
		<authentication-provider>

			<password-encoder hash="md5" />

			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select users.username, roles.name from users
											   join userandrole  on userandrole.user_id = users.id
											   join roles on userandrole.role_id = roles.id
											   where users.username = ?"
				users-by-username-query="select username,password,status from users where username = ?" />

		</authentication-provider>
	</authentication-manager>

</beans:beans>